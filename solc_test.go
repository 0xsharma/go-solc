package gosolc

import "testing"

func TestE2ECompile(t *testing.T) {
	// Define the path to the solc-js file
	solcJSPath := "./solc-bin/soljson-v0.8.29+commit.ab55807c.js"

	// Define the contracts directory
	contractsDir := "testdata/contracts"

	cfg := NewCompilerConfig("cancun", false, 0)

	c, err := NewCompiler(contractsDir, cfg, solcJSPath)
	if err != nil {
		panic(err)
	}

	// Compile the contracts
	compiled, err := c.Compile()
	if err != nil {
		panic(err)
	}

	bytecodes, err := compiled.GetContractByteCodes()
	if err != nil {
		panic(err)
	}

	deployedBytecodes, err := compiled.GetDeployedContractByteCodes()
	if err != nil {
		panic(err)
	}

	expectedBytecodes := map[string]string{
		"ERC20": "608060405234801561000f575f5ffd5b506040516107b43803806107b4833981810160405281019061003191906101a4565b815f908161003f919061042a565b50806001908161004f919061042a565b5050506104f9565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100b682610070565b810181811067ffffffffffffffff821117156100d5576100d4610080565b5b80604052505050565b5f6100e7610057565b90506100f382826100ad565b919050565b5f67ffffffffffffffff82111561011257610111610080565b5b61011b82610070565b9050602081019050919050565b8281835e5f83830152505050565b5f610148610143846100f8565b6100de565b9050828152602081018484840111156101645761016361006c565b5b61016f848285610128565b509392505050565b5f82601f83011261018b5761018a610068565b5b815161019b848260208601610136565b91505092915050565b5f5f604083850312156101ba576101b9610060565b5b5f83015167ffffffffffffffff8111156101d7576101d6610064565b5b6101e385828601610177565b925050602083015167ffffffffffffffff81111561020457610203610064565b5b61021085828601610177565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026857607f821691505b60208210810361027b5761027a610224565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a2565b6102e786836102a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032b610326610321846102ff565b610308565b6102ff565b9050919050565b5f819050919050565b61034483610311565b61035861035082610332565b8484546102ae565b825550505050565b5f5f905090565b61036f610360565b61037a81848461033b565b505050565b5b8181101561039d576103925f82610367565b600181019050610380565b5050565b601f8211156103e2576103b381610281565b6103bc84610293565b810160208510156103cb578190505b6103df6103d785610293565b83018261037f565b50505b505050565b5f82821c905092915050565b5f6104025f19846008026103e7565b1980831691505092915050565b5f61041a83836103f3565b9150826002028217905092915050565b6104338261021a565b67ffffffffffffffff81111561044c5761044b610080565b5b6104568254610251565b6104618282856103a1565b5f60209050601f831160018114610492575f8415610480578287015190505b61048a858261040f565b8655506104f1565b601f1984166104a086610281565b5f5b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103f3565b8355505b6001600288020188555050505b505050505050565b6102ae806105065f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c806306fdde031461003857806395d89b4114610056575b5f5ffd5b610040610074565b60405161004d91906101fb565b60405180910390f35b61005e6100ff565b60405161006b91906101fb565b60405180910390f35b5f805461008090610248565b80601f01602080910402602001604051908101604052809291908181526020018280546100ac90610248565b80156100f75780601f106100ce576101008083540402835291602001916100f7565b820191905f5260205f20905b8154815290600101906020018083116100da57829003601f168201915b505050505081565b6001805461010c90610248565b80601f016020809104026020016040519081016040528092919081815260200182805461013890610248565b80156101835780601f1061015a57610100808354040283529160200191610183565b820191905f5260205f20905b81548152906001019060200180831161016657829003601f168201915b505050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6101cd8261018b565b6101d78185610195565b93506101e78185602086016101a5565b6101f0816101b3565b840191505092915050565b5f6020820190508181035f83015261021381846101c3565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061025f57607f821691505b6020821081036102725761027161021b565b5b5091905056fea2646970667358221220080ecf21eb79e75c5583af5da298a4618525c7fe9b55f1613c69919f332d8f0764736f6c634300081d0033",
		"Token": "608060405234801561000f575f5ffd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250815f908161008a91906102df565b50806001908161009a91906102df565b5050506103ae565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011d57607f821691505b6020821081036101305761012f6100d9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610157565b61019c8683610157565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e06101db6101d6846101b4565b6101bd565b6101b4565b9050919050565b5f819050919050565b6101f9836101c6565b61020d610205826101e7565b848454610163565b825550505050565b5f5f905090565b610224610215565b61022f8184846101f0565b505050565b5b81811015610252576102475f8261021c565b600181019050610235565b5050565b601f8211156102975761026881610136565b61027184610148565b81016020851015610280578190505b61029461028c85610148565b830182610234565b50505b505050565b5f82821c905092915050565b5f6102b75f198460080261029c565b1980831691505092915050565b5f6102cf83836102a8565b9150826002028217905092915050565b6102e8826100a2565b67ffffffffffffffff811115610301576103006100ac565b5b61030b8254610106565b610316828285610256565b5f60209050601f831160018114610347575f8415610335578287015190505b61033f85826102c4565b8655506103a6565b601f19841661035586610136565b5f5b8281101561037c57848901518255600182019150602085019450602081019050610357565b868310156103995784890151610395601f8916826102a8565b8355505b6001600288020188555050505b505050505050565b6102ae806103bb5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c806306fdde031461003857806395d89b4114610056575b5f5ffd5b610040610074565b60405161004d91906101fb565b60405180910390f35b61005e6100ff565b60405161006b91906101fb565b60405180910390f35b5f805461008090610248565b80601f01602080910402602001604051908101604052809291908181526020018280546100ac90610248565b80156100f75780601f106100ce576101008083540402835291602001916100f7565b820191905f5260205f20905b8154815290600101906020018083116100da57829003601f168201915b505050505081565b6001805461010c90610248565b80601f016020809104026020016040519081016040528092919081815260200182805461013890610248565b80156101835780601f1061015a57610100808354040283529160200191610183565b820191905f5260205f20905b81548152906001019060200180831161016657829003601f168201915b505050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6101cd8261018b565b6101d78185610195565b93506101e78185602086016101a5565b6101f0816101b3565b840191505092915050565b5f6020820190508181035f83015261021381846101c3565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061025f57607f821691505b6020821081036102725761027161021b565b5b5091905056fea26469706673582212208716a6c75afe7235e510d4ba4a3156ab1d9045922f880b122a4dfc8b2b21e91c64736f6c634300081d0033",
	}

	expectedDeployedBytecodes := map[string]string{
		"ERC20": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c806306fdde031461003857806395d89b4114610056575b5f5ffd5b610040610074565b60405161004d91906101fb565b60405180910390f35b61005e6100ff565b60405161006b91906101fb565b60405180910390f35b5f805461008090610248565b80601f01602080910402602001604051908101604052809291908181526020018280546100ac90610248565b80156100f75780601f106100ce576101008083540402835291602001916100f7565b820191905f5260205f20905b8154815290600101906020018083116100da57829003601f168201915b505050505081565b6001805461010c90610248565b80601f016020809104026020016040519081016040528092919081815260200182805461013890610248565b80156101835780601f1061015a57610100808354040283529160200191610183565b820191905f5260205f20905b81548152906001019060200180831161016657829003601f168201915b505050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6101cd8261018b565b6101d78185610195565b93506101e78185602086016101a5565b6101f0816101b3565b840191505092915050565b5f6020820190508181035f83015261021381846101c3565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061025f57607f821691505b6020821081036102725761027161021b565b5b5091905056fea2646970667358221220080ecf21eb79e75c5583af5da298a4618525c7fe9b55f1613c69919f332d8f0764736f6c634300081d0033",
		"Token": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c806306fdde031461003857806395d89b4114610056575b5f5ffd5b610040610074565b60405161004d91906101fb565b60405180910390f35b61005e6100ff565b60405161006b91906101fb565b60405180910390f35b5f805461008090610248565b80601f01602080910402602001604051908101604052809291908181526020018280546100ac90610248565b80156100f75780601f106100ce576101008083540402835291602001916100f7565b820191905f5260205f20905b8154815290600101906020018083116100da57829003601f168201915b505050505081565b6001805461010c90610248565b80601f016020809104026020016040519081016040528092919081815260200182805461013890610248565b80156101835780601f1061015a57610100808354040283529160200191610183565b820191905f5260205f20905b81548152906001019060200180831161016657829003601f168201915b505050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6101cd8261018b565b6101d78185610195565b93506101e78185602086016101a5565b6101f0816101b3565b840191505092915050565b5f6020820190508181035f83015261021381846101c3565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061025f57607f821691505b6020821081036102725761027161021b565b5b5091905056fea26469706673582212208716a6c75afe7235e510d4ba4a3156ab1d9045922f880b122a4dfc8b2b21e91c64736f6c634300081d0033",
	}

	if len(bytecodes) != len(expectedBytecodes) {
		t.Fatalf("Expected %d bytecodes, got %d", len(expectedBytecodes), len(bytecodes))
	}

	for name, bytecode := range bytecodes {
		if bytecode != expectedBytecodes[name] {
			t.Errorf("Expected bytecode for %s to be %s, got %s", name, expectedBytecodes[name], bytecode)
		}
	}

	if len(deployedBytecodes) != len(expectedDeployedBytecodes) {
		t.Fatalf("Expected %d deployed bytecodes, got %d", len(expectedDeployedBytecodes), len(deployedBytecodes))
	}

	for name, deployedBytecode := range deployedBytecodes {
		if deployedBytecode != expectedDeployedBytecodes[name] {
			t.Errorf("Expected deployed bytecode for %s to be %s, got %s", name, expectedDeployedBytecodes[name], deployedBytecode)
		}
	}
}
